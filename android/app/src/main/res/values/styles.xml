<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is off -->
    <!-- Launch theme: lightweight, shown while Flutter initializes. Keep windowBackground set to launch drawable. -->
    <style name="LaunchTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Show a splash screen on the activity. Automatically removed when
             the Flutter engine draws its first frame -->
        <item name="android:windowBackground">@drawable/launch_background</item>
        <item name="android:forceDarkAllowed">false</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
        <item name="android:windowLayoutInDisplayCutoutMode">shortEdges</item>
    </style>
    <!-- Theme applied to the Android Window as soon as the process has started.
         This theme determines the color of the Android Window while your
         Flutter UI initializes, as well as behind your Flutter UI while its
         running.

         This Theme is only used starting with V2 of Flutter's Android embedding. -->
    <!-- App theme used after launch. Must inherit from MaterialComponents or AppCompat for some plugins (eg. flutter_stripe). -->
    <style name="AppTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Customize your theme here. Use colors defined in colors.xml -->
        <item name="colorPrimary">@color/primary</item>
        <item name="colorPrimaryVariant">@color/primary_dark</item>
        <item name="colorOnPrimary">@android:color/white</item>
        <item name="android:windowBackground">@color/background</item>
    </style>
    <!-- NormalTheme is used by the Flutter embedding as the normal theme. Reference AppTheme so plugins requiring MaterialComponents succeed. -->
    <style name="NormalTheme" parent="@style/AppTheme"></style>
</resources>
